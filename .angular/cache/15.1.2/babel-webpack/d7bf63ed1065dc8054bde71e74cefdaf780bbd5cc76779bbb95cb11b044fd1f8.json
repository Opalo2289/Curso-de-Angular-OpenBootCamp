{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nexport class LoginFormComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  ngOnInit() {\n    //Aqui pasamos los parametros y la funcion que tiene que hacer\n    this.authService.login('eve.holt@reqres.in', 'cityslicka').subscribe(Response => {\n      console.log('Respuesta de login', Response);\n      if (Response.token) sessionStorage.setItem('Token', Response.token); //asi de accede al token (el token es el valor)\n    }, error => console.error(`Ha ocurrido un error en el proceso de login: ${error}`), () => console.info('Se ha completado la llamada de login de REQRES'));\n  }\n}\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"app-login-form\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login-form works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE/BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQ;IAEL;IACA,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC,oBAAoB,EAAC,YAAY,CAAC,CAACC,SAAS,CACjEC,QAAQ,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C,IAAGA,QAAQ,CAACG,KAAK,EAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACG,KAAK,CAAC,EAAC;IACrE,CAAC,EACAG,KAAK,IAAKL,OAAO,CAACK,KAAK,CAAC,gDAAgDA,KAAK,EAAE,CAAC,EACjF,MAAML,OAAO,CAACM,IAAI,CAAC,gDAAgD,CAAC,CACnE;EACF;;AAfYb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCR/BC,yBAAG;MAAAA,iCAAiB;MAAAA,iBAAI","names":["LoginFormComponent","constructor","authService","ngOnInit","login","subscribe","Response","console","log","token","sessionStorage","setItem","error","info","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Guedys\\Documents\\ANGULAR-TYPESCRIPT\\OpenBootCamp\\Angular-OpenBootCamp\\HolaMundo\\src\\app\\components\\form\\login-form\\login-form.component.ts","C:\\Users\\Guedys\\Documents\\ANGULAR-TYPESCRIPT\\OpenBootCamp\\Angular-OpenBootCamp\\HolaMundo\\src\\app\\components\\form\\login-form\\login-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\nconstructor(private authService: AuthService) { }\r\n\r\nngOnInit(): void {\r\n  \r\n   //Aqui pasamos los parametros y la funcion que tiene que hacer\r\n   this.authService.login('eve.holt@reqres.in','cityslicka').subscribe(\r\n    (Response) => {\r\n    console.log('Respuesta de login', Response);\r\n    if(Response.token) sessionStorage.setItem('Token', Response.token) //asi de accede al token (el token es el valor)\r\n  },\r\n  (error) => console.error(`Ha ocurrido un error en el proceso de login: ${error}`),\r\n  () => console.info('Se ha completado la llamada de login de REQRES')\r\n  );\r\n }\r\n}\r\n\r\n//la response es de tipo http(averiguar mas sobre esto, tambien se puede devolver data, status quo, body header)\r\n//Por ultimo lo que debemos hacer es pintar el selector en el componente html principal\r\n//*cuando ya tenemos todo listo debemos acceder al token, lo guardamos en session store\r\n\r\n\r\n\r\n","<p>login-form works!</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}